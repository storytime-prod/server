"""Update Schema

Revision ID: 2d2a3860b08e
Revises:
Create Date: 2025-07-30 21:47:57.920435

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = "2d2a3860b08e"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("oauth_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("username", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("profile_picture", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("email", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_user_oauth_id"), "user", ["oauth_id"], unique=False)
    op.create_table(
        "story",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("title", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("author_id", sa.Uuid(), nullable=False),
        sa.Column("content", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("genre", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("is_root", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("is_public", sa.Boolean(), nullable=True),
        sa.Column("likes", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["author_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_story_author_id"), "story", ["author_id"], unique=False)
    op.create_index(op.f("ix_story_created_at"), "story", ["created_at"], unique=False)
    op.create_index(op.f("ix_story_genre"), "story", ["genre"], unique=False)
    op.create_index(op.f("ix_story_is_public"), "story", ["is_public"], unique=False)
    op.create_index(op.f("ix_story_is_root"), "story", ["is_root"], unique=False)
    op.create_index(op.f("ix_story_likes"), "story", ["likes"], unique=False)
    op.create_index(op.f("ix_story_title"), "story", ["title"], unique=False)
    op.create_table(
        "branch",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("src_id", sa.Uuid(), nullable=False),
        sa.Column("dest_id", sa.Uuid(), nullable=False),
        sa.Column("title", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.ForeignKeyConstraint(
            ["dest_id"],
            ["story.id"],
        ),
        sa.ForeignKeyConstraint(
            ["src_id"],
            ["story.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_branch_dest_id"), "branch", ["dest_id"], unique=False)
    op.create_index(op.f("ix_branch_src_id"), "branch", ["src_id"], unique=False)
    op.create_index(op.f("ix_branch_title"), "branch", ["title"], unique=False)
    op.create_table(
        "branchrequest",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("src_id", sa.Uuid(), nullable=False),
        sa.Column("dest_id", sa.Uuid(), nullable=False),
        sa.Column("comment", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("status", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("created_at", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("created_by", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["dest_id"],
            ["story.id"],
        ),
        sa.ForeignKeyConstraint(
            ["src_id"],
            ["story.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_branchrequest_comment"), "branchrequest", ["comment"], unique=False
    )
    op.create_index(
        op.f("ix_branchrequest_created_at"),
        "branchrequest",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_branchrequest_created_by"),
        "branchrequest",
        ["created_by"],
        unique=False,
    )
    op.create_index(
        op.f("ix_branchrequest_dest_id"), "branchrequest", ["dest_id"], unique=False
    )
    op.create_index(
        op.f("ix_branchrequest_src_id"), "branchrequest", ["src_id"], unique=False
    )
    op.create_index(
        op.f("ix_branchrequest_status"), "branchrequest", ["status"], unique=False
    )
    op.create_table(
        "comment",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("story_id", sa.Uuid(), nullable=False),
        sa.Column("content", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("author", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("created_at", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("created_by", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["story_id"],
            ["story.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_comment_author"), "comment", ["author"], unique=False)
    op.create_index(op.f("ix_comment_content"), "comment", ["content"], unique=False)
    op.create_index(
        op.f("ix_comment_created_at"), "comment", ["created_at"], unique=False
    )
    op.create_index(
        op.f("ix_comment_created_by"), "comment", ["created_by"], unique=False
    )
    op.create_index(op.f("ix_comment_story_id"), "comment", ["story_id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_comment_story_id"), table_name="comment")
    op.drop_index(op.f("ix_comment_created_by"), table_name="comment")
    op.drop_index(op.f("ix_comment_created_at"), table_name="comment")
    op.drop_index(op.f("ix_comment_content"), table_name="comment")
    op.drop_index(op.f("ix_comment_author"), table_name="comment")
    op.drop_table("comment")
    op.drop_index(op.f("ix_branchrequest_status"), table_name="branchrequest")
    op.drop_index(op.f("ix_branchrequest_src_id"), table_name="branchrequest")
    op.drop_index(op.f("ix_branchrequest_dest_id"), table_name="branchrequest")
    op.drop_index(op.f("ix_branchrequest_created_by"), table_name="branchrequest")
    op.drop_index(op.f("ix_branchrequest_created_at"), table_name="branchrequest")
    op.drop_index(op.f("ix_branchrequest_comment"), table_name="branchrequest")
    op.drop_table("branchrequest")
    op.drop_index(op.f("ix_branch_title"), table_name="branch")
    op.drop_index(op.f("ix_branch_src_id"), table_name="branch")
    op.drop_index(op.f("ix_branch_dest_id"), table_name="branch")
    op.drop_table("branch")
    op.drop_index(op.f("ix_story_title"), table_name="story")
    op.drop_index(op.f("ix_story_likes"), table_name="story")
    op.drop_index(op.f("ix_story_is_root"), table_name="story")
    op.drop_index(op.f("ix_story_is_public"), table_name="story")
    op.drop_index(op.f("ix_story_genre"), table_name="story")
    op.drop_index(op.f("ix_story_created_at"), table_name="story")
    op.drop_index(op.f("ix_story_author_id"), table_name="story")
    op.drop_table("story")
    op.drop_index(op.f("ix_user_oauth_id"), table_name="user")
    op.drop_table("user")
    # ### end Alembic commands ###
